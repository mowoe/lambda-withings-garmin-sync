name: Build Image and push to ECR, Execute Tofu

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create ECR Repository if not exists
        run: aws ecr describe-repositories --repository-names lambda-withings-garmin-sync || aws ecr create-repository --repository-name lambda-withings-garmin-sync

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com/lambda-withings-garmin-sync:latest
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com/lambda-withings-garmin-sync:${{ steps.vars.outputs.sha_short }}
          cache-to: type=gha,mode=max
          cache-from: type=gha
          provenance: false
  
  apply-tofu:
    name: Apply Tofu Config
    needs: build
    defaults:
      run:
        working-directory: tofu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - uses: opentofu/setup-opentofu@v1
      - name: OpenTofu fmt
        id: fmt
        run: tofu fmt -check
        continue-on-error: true

      - name: OpenTofu Init
        id: init
        run: tofu init

      - name: OpenTofu Validate
        id: validate
        run: tofu validate -no-color

      - name: OpenTofu Plan
        id: plan
        env:
          TF_VAR_garmin_connect_email: ${{ secrets.TF_VAR_garmin_connect_email }}
          TF_VAR_garmin_connect_password: ${{ secrets.TF_VAR_garmin_connect_password }}
          TF_VAR_withings_access_token: ${{ secrets.TF_VAR_withings_access_token }}
          TF_VAR_withings_refresh_token: ${{ secrets.TF_VAR_withings_refresh_token }}
          TF_VAR_withings_token_valid_until: ${{ secrets.TF_VAR_withings_token_valid_until }}
          TF_VAR_withings_client_id: ${{ secrets.TF_VAR_withings_client_id }}
          TF_VAR_withings_secret: ${{ secrets.TF_VAR_withings_secret }}
        run: tofu plan -no-color
        continue-on-error: true
      
      - name: OpenTofu Apply
        id: apply
        env:
          TF_VAR_garmin_connect_email: ${{ secrets.TF_VAR_garmin_connect_email }}
          TF_VAR_garmin_connect_password: ${{ secrets.TF_VAR_garmin_connect_password }}
          TF_VAR_withings_access_token: ${{ secrets.TF_VAR_withings_access_token }}
          TF_VAR_withings_refresh_token: ${{ secrets.TF_VAR_withings_refresh_token }}
          TF_VAR_withings_token_valid_until: ${{ secrets.TF_VAR_withings_token_valid_until }}
          TF_VAR_withings_client_id: ${{ secrets.TF_VAR_withings_client_id }}
          TF_VAR_withings_secret: ${{ secrets.TF_VAR_withings_secret }}
        run: tofu apply -no-color -auto-approve

